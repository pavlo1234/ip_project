import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "ColorTransformer.hpp"
        name: "ColorTransformer"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["main/ColorTransformer 254.0"]
        exportMetaObjectRevisions: [65024]
        Method {
            name: "transform"
            type: "bool"
            Parameter { name: "image"; type: "QImage"; isPointer: true }
            Parameter { name: "method"; type: "QString" }
            Parameter { name: "jsList"; type: "QVariantList" }
        }
        Method {
            name: "getDistribution"
            type: "QVariantMap"
            Parameter { name: "image"; type: "QImage"; isPointer: true }
        }
    }
    Component {
        file: "Editor.hpp"
        name: "Editor"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["main/Editor 254.0"]
        exportMetaObjectRevisions: [65024]
        Property {
            name: "image"
            type: "QImage"
            isPointer: true
            read: "getImage"
            index: 0
            isReadonly: true
        }
        Property { name: "temp_path"; type: "QUrl"; index: 1 }
        Property { name: "path"; type: "QUrl"; index: 2 }
        Signal {
            name: "loaded"
            Parameter { name: "temp_path"; type: "QUrl" }
        }
        Method {
            name: "load"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "save"
            type: "bool"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method { name: "close" }
    }
    Component {
        file: "Filter.hpp"
        name: "Filter"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["main/Filter 254.0"]
        exportMetaObjectRevisions: [65024]
        Method {
            name: "process"
            type: "bool"
            Parameter { name: "image"; type: "QImage"; isPointer: true }
        }
        Method {
            name: "setKernel"
            Parameter { name: "array"; type: "QVariantList" }
            Parameter { name: "N"; type: "int" }
            Parameter { name: "R"; type: "double" }
        }
    }
}
